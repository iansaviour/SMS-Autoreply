<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PanelControl1.ContentImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MdG0XQAAAABJRU5ErkJggg==
</value>
  </data>
</root>